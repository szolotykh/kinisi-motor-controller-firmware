{
    "version": "1.0.3",
    "commands": [
        {
            "command": "INITIALIZE_MOTOR",
            "code": "0x01",
            "description": "This command initializes a motor and prepares it for use.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to initialize."
                },
                {
                    "name": "is_reversed",
                    "type": "bool",
                    "default": false,
                    "description": "Whether or not the motor is reversed."
                }
            ],
            "category": "Motor"
        },
        {
            "command": "SET_MOTOR_SPEED",
            "code": "0x02",
            "description": "This command sets the speed of the specified motor in PWM.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to set the speed for."
                },
                {
                    "name": "pwm",
                    "type": "double",
                    "range": [
                        -100.0,
                        100.0
                    ],
                    "description": "The speed of the motor."
                }
            ],
            "category": "Motor"
        },
        {
            "command": "STOP_MOTOR",
            "code": "0x03",
            "description": "This command stops motor by setting its speed to 0.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to set the speed for."
                }
            ],
            "category": "Motor"
        },
        {
            "command": "BRAKE_MOTOR",
            "code": "0x04",
            "description": "This command brakes motor.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to set the speed for."
                }
            ],
            "category": "Motor"
        },
        {
            "command": "INITIALIZE_MOTOR_CONTROLLER",
            "code": "0x05",
            "description": "This command sets the controller for the specified motor.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to set the controller for."
                },
                {
                    "name": "is_reversed",
                    "type": "bool",
                    "default": false,
                    "description": "Whether or not the motor is reversed."
                },
                {
                    "name": "encoder_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the encoder to use for the controller."
                },
                {
                    "name": "encoder_resolution",
                    "type": "double",
                    "description": "Encoder resolution in ticks per revolution. The value can not be negative or zero."
                },
                {
                    "name": "kp",
                    "type": "double",
                    "description": "Proportional constant of PID"
                },
                {
                    "name": "ki",
                    "type": "double",
                    "description": "Integral constant of PID"
                },
                {
                    "name": "kd",
                    "type": "double",
                    "description": "Derivative constant of PID"
                },
                {
                    "name": "integral_limit",
                    "type": "double",
                    "description": "Integral limit of PID controller. The value can not be negative or zero. If the value is zero or negative, the integral limit is disabled."
                }
            ],
            "category": "Motor Controller"
        },
        {
            "command": "SET_MOTOR_TARGET_SPEED",
            "code": "0x06",
            "description": "This command sets the target speed for the specified motor in radians.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to set the target velocity for."
                },
                {
                    "name": "speed",
                    "type": "double",
                    "description": "The speed of the motor."
                }
            ],
            "category": "Motor Controller"
        },
        {
            "command": "RESET_MOTOR_CONTROLLER",
            "code": "0x07",
            "description": "This command resets the controller for the specified motor.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to reset the controller for."
                }
            ],
            "category": "Motor Controller"
        },
        {
            "command": "GET_MOTOR_CONTROLLER_STATE",
            "code": "0x08",
            "description": "This command gets the state of the controller for the specified motor.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to get the state for."
                }
            ],
            "response": {
                "name": "motor_controller_state",
                "type": "object",
                "description": "The state of the controller for the specified motor."
            }
        },
        {
            "command": "DELETE_MOTOR_CONTROLLER",
            "code": "0x09",
            "description": "This command deletes the controller for the specified motor.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the motor to delete the controller for."
                }
            ],
            "category": "Motor Controller"
        },
        {
            "command": "INITIALIZE_ENCODER",
            "code": "0x11",
            "description": "This command initializes an encoder and prepares it for use.",
            "properties": [
                {
                    "name": "encoder_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the encoder to initialize."
                }
            ],
            "category": "Encoder"
        },
        {
            "command": "GET_ENCODER_VALUE",
            "code": "0x12",
            "description": "This command retrieves the current value of the encoder.",
            "properties": [
                {
                    "name": "encoder_index",
                    "type": "uint8_t",
                    "range": [
                        0,
                        3
                    ],
                    "description": "The index of the encoder to retrieve the value for."
                }
            ],
            "response": {
                "name": "encoderValue",
                "type": "uint16_t",
                "description": "The current value of the encoder."
            },
            "category": "Encoder"
        },
        {
            "command": "INITIALIZE_GPIO_PIN",
            "code": "0x20",
            "description": "This command initializes a digital pin and prepares it for use.",
            "properties": [
                {
                    "name": "pin_number",
                    "type": "uint8_t",
                    "description": "The number of the pin to initialize."
                },
                {
                    "name": "mode",
                    "type": "uint8_t",
                    "description": "Set digital pin as input or output. Modes: 0 = INPUT_PULLDOWN, 1 = INPUT_PULLUP, 2 = INPUT_NOPULL, 3 = OUTPUT."
                }
            ],
            "category": "GPIO"
        },
        {
            "command": "SET_GPIO_PIN_STATE",
            "code": "0x21",
            "description": "This command sets the specified pin to a state.",
            "properties": [
                {
                    "name": "pin_number",
                    "type": "uint8_t",
                    "description": "The number of the pin to set to a state."
                },
                {
                    "name": "state",
                    "type": "uint8_t",
                    "description": "The state of the pin. 0 = LOW, 1 = HIGH."
                }
            ],
            "category": "GPIO"
        },
        {
            "command": "GET_GPIO_PIN_STATE",
            "code": "0x22",
            "description": "This command gets the state of the specified pin.",
            "properties": [
                {
                    "name": "pin_number",
                    "type": "uint8_t",
                    "description": "The number of the pin to get the state for."
                }
            ],
            "response": {
                "name": "state",
                "type": "uint8_t",
                "description": "The state of the pin. 0 = LOW, 1 = HIGH."
            },
            "category": "GPIO"
        },
        {
            "command": "TOGGLE_GPIO_PIN_STATE",
            "code": "0x23",
            "description": "This command toggles the specified pin.",
            "properties": [
                {
                    "name": "pin_number",
                    "type": "uint8_t",
                    "description": "The number of the pin to toggle."
                }
            ],
            "category": "GPIO"
        },
        {
            "command": "SET_STATUS_LED_STATE",
            "code": "0x25",
            "description": "This command sets the status LED to a state.",
            "properties": [
                {
                    "name": "state",
                    "type": "uint8_t",
                    "description": "The state of the status LED. 0 = OFF, 1 = ON."
                }
            ],
            "category": "GPIO"
        },
        {
            "command": "TOGGLE_STATUS_LED_STATE",
            "code": "0x26",
            "description": "This command toggles the status LED.",
            "properties": [],
            "category": "GPIO"
        },
        {
            "command": "INITIALIZE_MECANUM_PLATFORM",
            "code": "0x30",
            "description": "This command initializes a mecanum platform and prepares it for use.",
            "properties": [
                {
                    "name": "is_reversed_0",
                    "type": "bool",
                    "default": false,
                    "description": "Determins if motor 0 is reversed."
                },
                {
                    "name": "is_reversed_1",
                    "type": "bool",
                    "default": false,
                    "description": "Determins if motor 1 is reversed."
                },
                {
                    "name": "is_reversed_2",
                    "type": "bool",
                    "default": false,
                    "description": "Determins if motor 2 is reversed."
                },
                {
                    "name": "is_reversed_3",
                    "type": "bool",
                    "default": false,
                    "description": "Determins if motor 3 is reversed."
                }
            ],
            "category": "Platform"
        },
        {
            "command": "INITIALIZE_OMNI_PLATFORM",
            "code": "0x31",
            "description": "This command initializes a omni platform and prepares it for use.",
            "properties": [
                {
                    "name": "is_reversed_0",
                    "type": "bool",
                    "default": false,
                    "description": "Determins if motor 0 is reversed."
                },
                {
                    "name": "is_reversed_1",
                    "type": "bool",
                    "default": false,
                    "description": "Determins if motor 1 is reversed."
                },
                {
                    "name": "is_reversed_2",
                    "type": "bool",
                    "default": false,
                    "description": "Determins if motor 2 is reversed."
                },
                {
                    "name": "wheels_diameter",
                    "type": "uint16_t",
                    "default": 1,
                    "description": "Diameter of the robot wheels in millimeters."
                },
                {
                    "name": "robot_radius",
                    "type": "uint16_t",
                    "default": 1,
                    "description": "Distance berween the center of the robot and the center of the wheels in millimeters."
                }
            ],
            "category": "Platform"
        },
        {
            "command": "SET_PLATFORM_VELOCITY",
            "code": "0x40",
            "description": "This command sets the velocity for the platform in PWM.",
            "properties": [
                {
                    "name": "x",
                    "type": "double",
                    "description": "X component of platform velocity in PWM",
                    "range": [
                        -100.0,
                        100.0
                    ]
                },
                {
                    "name": "y",
                    "type": "double",
                    "description": "Y component of platform velocity in PWM",
                    "range": [
                        -100.0,
                        100.0
                    ]
                },
                {
                    "name": "t",
                    "type": "double",
                    "description": "Theta component of platform velocity in PWM",
                    "range": [
                        -100.0,
                        100.0
                    ]
                }
            ],
            "category": "Platform"
        },
        {
            "command": "SET_PLATFORM_CONTROLLER",
            "code": "0x41",
            "description": "This command sets the controller for the platform.",
            "properties": [
                {
                    "name": "kp",
                    "type": "double",
                    "description": "Proportional constant of PID"
                },
                {
                    "name": "ki",
                    "type": "double",
                    "description": "Integral constant of PID"
                },
                {
                    "name": "kd",
                    "type": "double",
                    "description": "Derivative constant of PID"
                },
                {
                    "name": "encoder_resolution",
                    "type": "double",
                    "description": "Encoder resolution in ticks per revolution. The value can not be negative or zero."
                },
                {
                    "name": "integral_limit",
                    "type": "double",
                    "description": "Integral limit of PID controller. The value can not be negative or zero. If the value is zero or negative, the integral limit is disabled."
                }
            ],
            "category": "Platform"
        },
        {
            "command": "SET_PLATFORM_TARGET_VELOCITY",
            "code": "0x42",
            "description": "This command set the target velocity for the platform in meters per second.",
            "properties": [
                {
                    "name": "x",
                    "type": "double",
                    "description": "X component of platform velocity in meters per second"
                },
                {
                    "name": "y",
                    "type": "double",
                    "description": "Y component of platform velocity in meters per second"
                },
                {
                    "name": "t",
                    "type": "double",
                    "description": "Theta component of platform velocity in radians per second"
                }
            ],
            "category": "Platform"
        },
        {
            "command": "GET_PLATFORM_CURRENT_VELOCITY",
            "code": "0x43",
            "description": "This command gets the current velocity of the platform in meters per second.",
            "response":{
                "name": "platform_velocity",
                "type": "object",
                "description": "The current velocity of the platform in meters per second."
            }
        }
    ],
    "objects": [
        {
            "name": "motor_controller_state",
            "description": "The state of the controller for the specified motor.",
            "properties": [
                {
                    "name": "motor_index",
                    "type": "int8_t",
                    "description": "Index of the motor with the controller."
                },
                {
                    "name": "kp",
                    "type": "double",
                    "description": "Proportional constant of PID"
                },
                {
                    "name": "ki",
                    "type": "double",
                    "description": "Integral constant of PID"
                },
                {
                    "name": "kd",
                    "type": "double",
                    "description": "Derivative constant of PID"
                },
                {
                    "name": "target_speed",
                    "type": "double",
                    "description": "The target speed of the motor."
                },
                {
                    "name": "current_speed",
                    "type": "double",
                    "description": "The current speed of the motor."
                },
                {
                    "name": "error",
                    "type": "double",
                    "description": "The error of the motor."
                },
                {
                    "name": "output",
                    "type": "double",
                    "description": "The output of the motor."
                }
            ]
        },
        {
            "name": "platform_velocity",
            "description": "The velocity of the platform in meters per second.",
            "properties": [
                {
                    "name": "x",
                    "type": "double",
                    "description": "X component of platform velocity in meters per second"
                },
                {
                    "name": "y",
                    "type": "double",
                    "description": "Y component of platform velocity in meters per second"
                },
                {
                    "name": "t",
                    "type": "double",
                    "description": "Theta component of platform velocity in radians per second"
                }
            ]
        }
    ]
}